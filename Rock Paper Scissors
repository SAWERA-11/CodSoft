import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import random

root = tk.Tk()
root.title("Rock, Paper, Scissors")
root.geometry("400x300")
root.resizable(0,0)
root.configure(bg="beige")

choices = ['rock', 'paper', 'scissors']
# Initialize the user and computer scores
user_score = 0
computer_score = 0

# Function to handle the user's choice
def choose_option(user_choice):
    global user_score, computer_score

    # Generate a random choice
    computer_choice = random.choice(choices)

    # Display the user's and computer's choices
    user_choice_label.config(text=f"User's Choice: {user_choice.capitalize()}")
    computer_choice_label.config(text=f"Computer's Choice: {computer_choice.capitalize()}")

    # Determine the winner
    if user_choice == computer_choice:
        winner = "TIE"
    elif (user_choice == 'rock' and computer_choice == 'scissors') or \
         (user_choice == 'scissors' and computer_choice == 'paper') or \
         (user_choice == 'paper' and computer_choice == 'rock'):
        winner = "USER WINS"
        user_score += 1
    else:
        winner = "COMPUTER WINS"
        computer_score += 1

    # Display the result
    result_label.config(text=f"{winner}!", font=("Times New Roman",18), foreground="green" if winner == "USER WINS" else "red")

    # Update the score labels
    update_scores()

# reset the scores
def reset_scores():
    global user_score, computer_score
    user_score = 0
    computer_score = 0
    update_scores()

# update the score labels
def update_scores():
    user_score_label.config(text=f"User score: {user_score}")
    computer_score_label.config(text=f"Computer score: {computer_score}")

# Function to play again
def play_again():
    if messagebox.askyesno("Play Again", "Do you want to play again?"):
        reset_scores()
        user_choice_label.config(text="User's Choice: ")
        computer_choice_label.config(text="Computer's Choice: ")
        result_label.config(text="")
    else:
        root.destroy()

# Create a frame to hold the user's choice buttons
options_frame = ttk.Frame(root)
options_frame.pack(pady=20)

# Create buttons for each choice with appealing colors
for choice in choices:
    button = ttk.Button(options_frame, text=choice.capitalize(), command=lambda c=choice: choose_option(c))
    button.pack(side=tk.LEFT, padx=10)

# Create a gap between user choice buttons and computer choice display
tk.Label(root, text="", bg="beige").pack()

# Create a frame to display the user and computer choices
choices_frame = ttk.Frame(root)
choices_frame.pack(pady=10)

user_choice_label = ttk.Label(choices_frame, text="User's Choice: ",background="LIGHT BLUE", font=("ARIAL", 12))
user_choice_label.pack(side=tk.LEFT)

computer_choice_label = ttk.Label(choices_frame, text="Computer's Choice: ",background="GRAY", font=("ARIAL", 12))
computer_choice_label.pack(side=tk.LEFT)

# Create a frame to display the winning message
winning_frame = ttk.Frame(root)
winning_frame.pack(pady=10)

result_label = ttk.Label(winning_frame, text="",background="beige", font=("Helvetica", 14))
result_label.pack()

# Create a frame to display the user and computer scores
scores_frame = ttk.Frame(root)
scores_frame.pack(pady=20)

user_score_label = ttk.Label(scores_frame, text=f"User score: {user_score}",background="black",foreground="beige", font=("calibri", 12))
user_score_label.pack(side=tk.LEFT)

computer_score_label = ttk.Label(scores_frame, text=f"Computer score: {computer_score}",background="black",foreground="beige", font=("calibri", 12))
computer_score_label.pack(side=tk.RIGHT)

# Create a button to play again
play_again_button = ttk.Button(root, text="Play Again", command=play_again)
play_again_button.pack(pady=10)

# Start the main loop
root.mainloop()
